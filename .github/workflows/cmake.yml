name: build and test

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]
        compiler: [clang, msvc]
        # exclude msvc from non-windows os
        
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    
    - name: Download ISPC (Windows)
      if: runner.os == 'Windows'
      run: Invoke-WebRequest -Uri "https://github.com/ispc/ispc/releases/download/v1.17.0/ispc-v1.17.0-windows.zip" -OutFile "ispc.zip" ; 7z x ispc.zip ; "ispc-v1.17.0-windows/bin" >> $env:GITHUB_PATH
    - name: Download ISPC (Linux)
      if: runner.os == 'Linux'
      run: wget "https://github.com/ispc/ispc/releases/download/v1.17.0/ispc-v1.17.0-linux.tar.gz" && tar -zxvf ispc-v1.17.0-linux.tar.gz && echo "ispc-v1.17.0-linux/bin" >> $GITHUB_PATH
    - name: Download ISPC (MacOS)
      if: runner.os == 'macOS'
      run: wget "https://github.com/ispc/ispc/releases/download/v1.17.0/ispc-v1.17.0-macOS.tar.gz" && tar -zxvf ispc-v1.17.0-macOS.tar.gz && echo "ispc-v1.17.0-macOS/bin" >> $GITHUB_PATH

    - uses: lukka/get-cmake@latest
    
    - name: Restore artifacts, or setup vcpkg (do not install any package)
      uses: lukka/run-vcpkg@v10
      with: 
        vcpkgDirectory: '${{ env.VCPKG_INSTALLATION_ROOT }}/vcpkg'

    - name: Build with ${{ matrix.compiler }}
      uses: lukka/run-cmake@v10
      with:
        configurePreset: '${{ matrix.compiler }}'
        buildPreset: '${{ matrix.compiler }} (Release)'
        testPreset: '${{ matrix.compiler }} Test'