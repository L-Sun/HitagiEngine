add_requires("libpng", "assimp", "libjpeg-turbo", "crossguid")

target("scene_object")
    set_kind("static")
    add_files("src/scene_object.cpp")
    add_includedirs("include", {public = true})
    add_packages("fmt")
    add_packages("crossguid", {public = true})

target("parser")
    set_kind("static")
    add_files("src/parser/*.cpp", "src/image.cpp")
    remove_files("src/parser/assimp.cpp")
    remove_files("src/parser/bvh.cpp")
    add_includedirs("include", {public = true})
    add_deps("core", "math", "mesh")
    add_packages("libpng", "assimp", "spdlog", "libjpeg-turbo", "crossguid")

target("material")
    set_kind("static")
    add_files("src/material.cpp", "src/material_instance.cpp")
    add_includedirs("include", {public = true})
    add_deps("core", "math", "scene_object", "utils")
    add_packages("spdlog", "magic_enum")

target("mesh")
    set_kind("static")
    add_files("src/mesh.cpp")
    add_includedirs("include", {public = true})
    add_deps("core", "math", "scene_object", "utils")
    add_packages("spdlog", "magic_enum")

-- target("scene")
--     set_kind("static")
--     add_files("src/scene.cpp")
--     add_includedirs("include", {public = true})
--     add_deps("core", "math", "scene_object", "utils")

target("asset_manager")
    set_kind("static")
    add_files("src/asset_manager.cpp")
    add_includedirs("include", {public = true})
    add_deps("core", "math", "parser", "scene_object", "utils")
    add_packages("spdlog", "magic_enum")
