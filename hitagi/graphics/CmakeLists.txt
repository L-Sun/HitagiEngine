add_library(
    shader_manager
    src/shader_manager.cpp
)
target_link_libraries(
    shader_manager
    PUBLIC core
)
target_include_directories(
    shader_manager
    PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include
)

add_library(graphics_api INTERFACE)
target_link_libraries(
    graphics_api
    INTERFACE shader_manager
)
target_include_directories(
    graphics_api
    INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/include
              "$<TARGET_PROPERTY:asset_manager,INTERFACE_INCLUDE_DIRECTORIES>"
)

if(WIN32)
    include(dx12_backend.cmake)
endif(WIN32)

add_library(
    graphics
    src/graphics_manager.cpp
    src/resource_manager.cpp
    src/frame.cpp
    src/frame_graph.cpp
    src/pipeline_state.cpp
)
target_include_directories(
    graphics
    PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include
    PRIVATE "$<TARGET_PROPERTY:application,INTERFACE_INCLUDE_DIRECTORIES>"
)
target_link_libraries(
    graphics
    PUBLIC core shader_manager math
    PRIVATE scene_manager
            physics_manager
            debug_manager
            gui_manager
            $<$<PLATFORM_ID:Windows>:dx12_driver_api>
            freetype
)

add_subdirectory(test)
